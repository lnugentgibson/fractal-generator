"use strict";var _window=window,angular=_window.angular,$=_window.$;angular.module("oaGLSLNoiseDemo",["oaGLSLNoise"]).controller("NoiseTestCtrl",["$scope","oaWebglHelpers","oaWebglCanvas","oaWebglProgram","oaWebglShaderSource","oaWebglShaderSnippet","oaWebglFunctionSnippet","oaWebglSnippet","oaNoiseShaderFunctions",function(a,b,c,d,e,f,g,h,i){var j,k,l,m={width:512,height:512},n=new e(function(){return i.shaders.vertex.standardVertexShader.generate()}()),o={position:{name:"a_position"}},p={sineseed:{name:"u_sineseed"},dotseed:{name:"u_dotseed"},resolution:{name:"u_resolution",value:1}},q={positions:{name:"positions",data:[-1,-1,1,-1,-1,1,1,1],datatype:b.FLOAT32,target:"ARRAY_BUFFER",usage:"STATIC_DRAW",attribute:"position",numComponents:2,type:"FLOAT",normalize:!1,stride:0,offset:0},indices:{name:"indices",data:[0,1,2,2,1,3],datatype:b.UINT16,target:"ELEMENT_ARRAY_BUFFER",usage:"STATIC_DRAW"}},r={},s=function(a){a.clearColor(0,0,0,1),a.enable(a.DEPTH_TEST),a.clearDepth(-1),a.depthFunc(a.GEQUAL),a.clear(a.COLOR_BUFFER_BIT|a.DEPTH_BUFFER_BIT),this.pushAttribute(a,"position"),a.bindBuffer(a.ELEMENT_ARRAY_BUFFER,this.bIndices),a.useProgram(this.program),a.uniformMatrix4fv(this.uSineseed,!1,new Float32Array([84423.9141,72162.3789,54253.9214,94823.3014,45809.7063,19660.3408,41988.1591,17751.3314,70649.2482,72822.8071,31994.1736,29779.3959,68961.421,33300.0043,38860.2285,67090.792])),a.uniformMatrix4fv(this.uDotseed,!1,new Float32Array([84.4239141,72.1623789,54.2539214,94.8233014,45.8097063,19.6603408,41.9881591,17.7513314,70.6492482,72.8228071,31.9941736,29.7793959,68.961421,33.3000043,38.8602285,67.090792])),a.uniform1f(this.uResolution,this.uResolutionSpec.value);var b=0,c=6;a.drawElements(a.TRIANGLES,c,a.UNSIGNED_SHORT,b)};j="sine-noise";var t=$("#sine-noise"),u=new c(j,t[0],m),v=new e(function(){return i.shaders.fragment.sineNoiseFragment.generate()}());console.log(j),v.printShader(),k=new d({vertexSource:n,fragmentSource:v,attributes:o,uniforms:p,buffers:q,textures:r,executor:s}),u.registerProgram("main",k),u.draw(),j="sine-gradient-noise";var w=$("#sine-gradient-noise"),x=new c(j,w[0],m),y=new f("sineGradientNoiseFragment");y.variables.addMultiple([{varname:"u_sineseed",datatype:"mat4",vartype:"uniform"},{varname:"u_dotseed",datatype:"mat4",vartype:"uniform"},{varname:"u_resolution",datatype:"float",vartype:"uniform"}]),y.variables.apply(),y.addFunctions([i.functions.rand11Function,i.functions.rand22RotFunction]);var z=new h("sineGradientNoiseFragmentBody","vec2 grad = rand2Rot(floor(gl_FragCoord.xy / u_resolution));\ngl_FragColor = vec4(grad * 0.5 + vec2(0.5), length(grad), 1.0);");y.mainSnippet=z,v=new e(function(){return y.generate()}()),console.log(j),v.printShader(),k=new d({vertexSource:n,fragmentSource:v,attributes:o,uniforms:p,buffers:q,textures:r,executor:s}),x.registerProgram("main",k),x.draw(),j="perlin-sine-noise";var A=$("#perlin-sine-noise"),B=new c(j,A[0],m),C=new f("perlinNoiseFragment");C.variables.addMultiple([{varname:"u_sineseed",datatype:"mat4",vartype:"uniform"},{varname:"u_dotseed",datatype:"mat4",vartype:"uniform"},{varname:"u_resolution",datatype:"float",vartype:"uniform"}]),C.variables.apply(),C.addFunctions([i.functions.rand11Function,i.functions.rand12Function,i.functions.mix1Function,i.functions.curve5Function,i.functions.mix5Function,i.functions.perlin2NoiseFunction]),l=i.snippets.grayscaleSnippet(),l.addSnippet("value",new h("sinenoise","perlin(gl_FragCoord.xy / u_resolution)")),l.setParameter("alpha","1.0");var D=new h("sineNoiseFragmentBody");D.source='gl_FragColor = ${S("grayscale", "null")};',D.addSnippet("grayscale",l),C.mainSnippet=D,v=new e(function(){return C.generate()}()),console.log(j),v.printShader(),k=new d({vertexSource:n,fragmentSource:v,attributes:o,uniforms:p,buffers:q,textures:r,executor:s}),B.registerProgram("main",k),p.resolution.value=16,B.draw(),j="perlin-sine-gradient-noise";var E=$("#perlin-sine-gradient-noise"),F=new c(j,E[0],m),G=new f("perlinGradientNoiseFragment");G.variables.addMultiple([{varname:"u_sineseed",datatype:"mat4",vartype:"uniform"},{varname:"u_dotseed",datatype:"mat4",vartype:"uniform"},{varname:"u_resolution",datatype:"float",vartype:"uniform"}]),G.variables.apply(),G.addFunctions([i.functions.rand11Function,i.functions.rand22RotFunction,i.functions.mix1Function,i.functions.curve5Function,i.functions.mix5Function,i.functions.perlin2GradientNoiseFunction]),l=i.snippets.grayscaleSnippet(),l.addSnippet("value",new h("sinenoise","perlinGradient(gl_FragCoord.xy / u_resolution)")),l.setParameter("alpha","1.0");var H=new h("sineNoiseFragmentBody");H.source='gl_FragColor = ${S("grayscale", "null")};',H.addSnippet("grayscale",l),G.mainSnippet=H,v=new e(function(){return G.generate()}()),console.log(j),v.printShader(),k=new d({vertexSource:n,fragmentSource:v,attributes:o,uniforms:p,buffers:q,textures:r,executor:s}),F.registerProgram("main",k),F.draw();j="simplex-sine-noise";var I=$("#simplex-sine-noise"),J=new c(j,I[0],m),K=new f("simplexNoiseFragment");K.variables.addMultiple([{varname:"u_sineseed",datatype:"mat4",vartype:"uniform"},{varname:"u_dotseed",datatype:"mat4",vartype:"uniform"},{varname:"u_resolution",datatype:"float",vartype:"uniform"}]),K.variables.apply(),K.addFunctions([i.functions.rand11Function,i.functions.rand12Function,i.functions.mix1Function,i.functions.curve5Function,i.functions.mix5Function,i.functions.simplex2NoiseFunction]),l=i.snippets.grayscaleSnippet(),l.addSnippet("value",new h("sinenoise","simplex(gl_FragCoord.xy / u_resolution)")),l.setParameter("alpha","1.0");var L=new h("sineNoiseFragmentBody");L.source='gl_FragColor = ${S("grayscale", "null")};',L.addSnippet("grayscale",l),K.mainSnippet=L,v=new e(function(){return K.generate()}()),console.log(j),v.printShader(),k=new d({vertexSource:n,fragmentSource:v,attributes:o,uniforms:p,buffers:q,textures:r,executor:s}),J.registerProgram("main",k),p.resolution.value=16,J.draw(),j="simplex-sine-gradient-noise";var M=$("#simplex-sine-gradient-noise"),N=new c(j,M[0],m),O=new f("simplexGradientNoiseFragment");O.variables.addMultiple([{varname:"u_sineseed",datatype:"mat4",vartype:"uniform"},{varname:"u_dotseed",datatype:"mat4",vartype:"uniform"},{varname:"u_resolution",datatype:"float",vartype:"uniform"}]),O.variables.apply(),O.addFunctions([i.functions.rand11Function,i.functions.rand22RotFunction,i.functions.mix1Function,i.functions.curve5Function,i.functions.mix5Function,i.functions.simplex2GradientNoiseFunction]),l=i.snippets.grayscaleSnippet(),l.addSnippet("value",new h("sinenoise","simplexGradient(gl_FragCoord.xy / u_resolution)")),l.setParameter("alpha","1.0");var P=new h("sineNoiseFragmentBody");P.source='gl_FragColor = ${S("grayscale", "null")};',P.addSnippet("grayscale",l),O.mainSnippet=P,v=new e(function(){return O.generate()}()),console.log(j),v.printShader(),k=new d({vertexSource:n,fragmentSource:v,attributes:o,uniforms:p,buffers:q,textures:r,executor:s}),N.registerProgram("main",k),N.draw(),j="wood";var Q=$("#wood"),R=new c(j,Q[0],m);v=new e(function(){return"precision mediump float;\nuniform mat4 u_seed;\nuniform float u_resolution;\nfloat rand(float f) {\n  return fract(sin(f + u_seed[0].z) * u_seed[0].w);\n}\nfloat rand(vec2 v) {\n  return rand(dot(v, u_seed[1].xy));\n}\nvec2 rand22Rot(vec2 v) {\n  float a = 2.0 * 3.14159265358 * rand(dot(v, u_seed[1].xy));\n  return vec2(cos(a), sin(a));\n}\nfloat noise(vec2 op) {\n  mat2 t = mat2(1.0, 0.0, 0.5, sqrt(3.0 / 4.0));\n  mat2 it = mat2(1.0, 0.0, -sqrt(1.0 / 3.0), 2.0 * sqrt(1.0 / 3.0));\n  vec2 ip = it * op;\n  vec2 il = floor(ip);\n  vec2 f = fract(ip);\n  vec2 ol = t * il;\n  vec2 oc, oc1, oc2, oc3;\n  oc = ol + vec2(0.75, sqrt(3.0) / 4.0);\n  oc2 = ol + vec2(1.0, 0.0);\n  oc3 = ol + vec2(0.5, sqrt(3.0 / 4.0));\n  //float y23 = -sqrt(3.0 / 4.0), x32 = -0.5, x13, y13;\n  float y23 = oc2.y - oc3.y, x32 = oc3.x - oc2.x, x13, y13;\n  float x03 = op.x - oc3.x, y03 = op.y - oc3.y;\n  if(f.x + f.y < 1.0) {\n    oc1 = ol;\n    x13 = -0.5;\n    y13 = -sqrt(3.0 / 4.0);\n  }\n  else {\n    oc1 = ol + vec2(1.5, sqrt(3.0 / 4.0));\n    x13 = 1.0;\n    y13 = 0.0;\n  }\n  x13 = oc1.x - oc3.x;\n  y13 = oc1.y - oc3.y;\n  vec3 r = vec3(dot(rand22Rot(oc1), op - oc1), dot(rand22Rot(oc2), op - oc2), dot(rand22Rot(oc3), op - oc3));\n  //r = vec3(0.0, 0.0, 1.0);\n  //vec3 d = vec3(length(op - oc1), length(op - oc2), length(op - oc3));\n  //vec3 w = 1.0 / d;\n  vec3 w = vec3((y23 * x03 + x32 * y03) / (y23 * x13 + x32 * y13), (-y13 * x03 + x13 * y03) / (y23 * x13 + x32 * y13), 0.0);\n  w.z = 1.0 - w.x - w.y;\n  vec3 w3 = w * w * (3.0 - 2.0 * w);\n  vec3 w5 = w * w * w * (6.0 * w * w - 15.0 * w + 10.0);\n  vec3 rv = r * w5;\n  return (rv.x + rv.y + rv.z) / (w5.x + w5.y + w5.z);\n}\nmat2 rot2(float a) {\n  return mat2(cos(a), sin(a), -sin(a), cos(a));\n}\nfloat lines(vec2 p, float f, float o, float a, float s, vec2 l) {\n  return smoothstep(l.x, l.y, a * sin(f * p.x + o) + s);\n}\nvoid main() {\n  vec2 p = gl_FragCoord.xy / u_resolution + vec2(256.0, 0.0);\n  vec2 wp = p.yx * vec2(2.0, 1.0);\n  float n = noise(p * vec2(0.25, pow(2.0, -6.0)));\n  mat2 r = rot2((n + 1.0) * 0.01);\n  gl_FragColor = vec4(vec3(lines(vec2(0.0, 0.0), 3.14 / 2.0, 0.2 + n * 64.0, 0.5, 0.5, vec2(0.0, 0.9))), 1.0);\n}"}()),console.log(j),v.printShader(),k=new d({vertexSource:n,fragmentSource:v,attributes:o,uniforms:p,buffers:q,textures:r,executor:s}),R.registerProgram("main",k),R.draw(),j="splatter";var S=$("#splatter"),T=new c(j,S[0],m);v=new e(function(){return"precision mediump float;\nuniform mat4 u_seed;\nuniform float u_resolution;\nfloat rand(float f) {\n  return fract(sin(f + u_seed[0].z) * u_seed[0].w);\n}\nfloat rand(vec2 v) {\n  return rand(dot(v, u_seed[1].xy));\n}\nvec2 rand22Rot(vec2 v) {\n  float a = 2.0 * 3.14159265358 * rand(dot(v, u_seed[1].xy));\n  return vec2(cos(a), sin(a));\n}\nfloat noise(vec2 op) {\n  mat2 t = mat2(1.0, 0.0, 0.5, sqrt(3.0 / 4.0));\n  mat2 it = mat2(1.0, 0.0, -sqrt(1.0 / 3.0), 2.0 * sqrt(1.0 / 3.0));\n  vec2 ip = it * op;\n  vec2 il = floor(ip);\n  vec2 f = fract(ip);\n  vec2 ol = t * il;\n  vec2 oc, oc1, oc2, oc3;\n  oc = ol + vec2(0.75, sqrt(3.0) / 4.0);\n  oc2 = ol + vec2(1.0, 0.0);\n  oc3 = ol + vec2(0.5, sqrt(3.0 / 4.0));\n  //float y23 = -sqrt(3.0 / 4.0), x32 = -0.5, x13, y13;\n  float y23 = oc2.y - oc3.y, x32 = oc3.x - oc2.x, x13, y13;\n  float x03 = op.x - oc3.x, y03 = op.y - oc3.y;\n  if(f.x + f.y < 1.0) {\n    oc1 = ol;\n    x13 = -0.5;\n    y13 = -sqrt(3.0 / 4.0);\n  }\n  else {\n    oc1 = ol + vec2(1.5, sqrt(3.0 / 4.0));\n    x13 = 1.0;\n    y13 = 0.0;\n  }\n  x13 = oc1.x - oc3.x;\n  y13 = oc1.y - oc3.y;\n  vec3 r = vec3(dot(rand22Rot(oc1), op - oc1), dot(rand22Rot(oc2), op - oc2), dot(rand22Rot(oc3), op - oc3));\n  //r = vec3(0.0, 0.0, 1.0);\n  //vec3 d = vec3(length(op - oc1), length(op - oc2), length(op - oc3));\n  //vec3 w = 1.0 / d;\n  vec3 w = vec3((y23 * x03 + x32 * y03) / (y23 * x13 + x32 * y13), (-y13 * x03 + x13 * y03) / (y23 * x13 + x32 * y13), 0.0);\n  w.z = 1.0 - w.x - w.y;\n  vec3 w3 = w * w * (3.0 - 2.0 * w);\n  vec3 w5 = w * w * w * (6.0 * w * w - 15.0 * w + 10.0);\n  vec3 rv = r * w5;\n  return (rv.x + rv.y + rv.z) / (w5.x + w5.y + w5.z);\n}\nvoid main() {\n  vec2 p = gl_FragCoord.xy / u_resolution;\n  float s1 = noise(p / 4.0) * 0.5 + 0.5;\n  //vec2 sp = p + s1;\n  float s2 = (1.0 - s1) * 0.7 + (noise(p) * 0.5 + 0.5) * 0.3;\n  float g1 = smoothstep(0.18, 0.2, s1 * s1);\n  float g2 = smoothstep(0.14, 0.16, s2 * s2);\n  float g3 = smoothstep(0.18, 0.25, s2 * s2);\n  float g4 = 1.0 + g3 - g2;\n  gl_FragColor = vec4(vec3(s1 * s1), 1.0);\n  gl_FragColor = vec4(vec3(s2 * s2), 1.0);\n  gl_FragColor = vec4(vec3(g2 * g2), 1.0);\n  gl_FragColor = vec4(vec3(g3 * g3), 1.0);\n  gl_FragColor = vec4(g1 * vec3(g4 * g4), 1.0);\n}"}()),console.log(j),v.printShader(),k=new d({vertexSource:n,fragmentSource:v,attributes:o,uniforms:p,buffers:q,textures:r,executor:s}),T.registerProgram("main",k),p.resolution.value=32,T.draw();var U,V;j="fractal-simplex-sine-gradient-noise";var U=$("#fractal-simplex-sine-gradient-noise"),V=new c(j,U[0],m);v=new e(function(){return i.shaders.fragment.fractalPerlin2NoiseFragment.generate()}()),console.log(j),v.printShader(),k=new d({vertexSource:n,fragmentSource:v,attributes:o,uniforms:p,buffers:q,textures:r,executor:s}),V.registerProgram("main",k),p.resolution.value=512,V.draw()}]);