"use strict";var _window=window,angular=_window.angular,$=_window.$;angular.module("oaGLSLNoiseDemo",["oaGLSLNoise"]).controller("NoiseTestCtrl",["$scope","oaWebglHelpers","oaWebglCanvas","oaWebglProgram","oaWebglShaderSource","oaWebglShaderSnippet","oaWebglFunctionSnippet","oaWebglSnippet","oaNoiseShaderFunctions",function(a,b,c,d,e,f,g,h,i){var j,k,l={width:512,height:512},m=new e(function(){return i.standardVertexShader.generate()}()),n={position:{name:"a_position"}},o={seed:{name:"u_seed"},resolution:{name:"u_resolution",value:1}},p={positions:{name:"positions",data:[-1,-1,1,-1,-1,1,1,1],datatype:b.FLOAT32,target:"ARRAY_BUFFER",usage:"STATIC_DRAW",attribute:"position",numComponents:2,type:"FLOAT",normalize:!1,stride:0,offset:0},indices:{name:"indices",data:[0,1,2,2,1,3],datatype:b.UINT16,target:"ELEMENT_ARRAY_BUFFER",usage:"STATIC_DRAW"}},q={},r=function(a){a.clearColor(0,0,0,1),a.enable(a.DEPTH_TEST),a.clearDepth(-1),a.depthFunc(a.GEQUAL),a.clear(a.COLOR_BUFFER_BIT|a.DEPTH_BUFFER_BIT),this.pushAttribute(a,"position"),a.bindBuffer(a.ELEMENT_ARRAY_BUFFER,this.bIndices),a.useProgram(this.program),a.uniform4fv(this.uSeed,new Float32Array([12.9898,78.233,35256.1646873,43758.5453123])),a.uniform1f(this.uResolution,this.uResolutionSpec.value);var b=0,c=6;a.drawElements(a.TRIANGLES,c,a.UNSIGNED_SHORT,b)};j="sine-noise";var s=$("#sine-noise"),t=new c(j,s[0],l),u=new f("sineNoiseFragment");u.variables.addMultiple([{varname:"u_seed",datatype:"vec4",vartype:"uniform"},{varname:"u_resolution",datatype:"float",vartype:"uniform"}]),u.variables.apply(),u.addFunctions([i.randScalarFunction,i.randVectorFunction]);var v=i.grayscaleSnippet();v.addSnippet("value",new h("sinenoise","rand(floor(gl_FragCoord.xy / u_resolution))")),v.setParameter("alpha","1.0");var w=new h("sineNoiseFragmentBody");w.source='gl_FragColor = ${S("grayscale", "null")};',w.addSnippet("grayscale",v),u.mainSnippet=w;var x=new e(function(){return u.generate()}());k=new d({vertexSource:m,fragmentSource:x,attributes:n,uniforms:o,buffers:p,textures:q,executor:r}),t.registerProgram("main",k),t.draw(),j="sine-gradient-noise";var y=$("#sine-gradient-noise"),z=new c(j,y[0],l),A=new f("sineGradientNoiseFragment");A.variables.addMultiple([{varname:"u_seed",datatype:"vec4",vartype:"uniform"},{varname:"u_resolution",datatype:"float",vartype:"uniform"}]),A.variables.apply(),A.addFunctions([i.randScalarFunction,i.randGradFunction]);var B=new h("sineGradientNoiseFragmentBody","vec2 grad = randGrad(floor(gl_FragCoord.xy / u_resolution));\ngl_FragColor = vec4(grad * 0.5 + vec2(0.5), length(grad), 1.0);");A.mainSnippet=B,x=new e(function(){return A.generate()}()),k=new d({vertexSource:m,fragmentSource:x,attributes:n,uniforms:o,buffers:p,textures:q,executor:r}),z.registerProgram("main",k),z.draw(),j="perlin-sine-noise";var C=$("#perlin-sine-noise"),D=new c(j,C[0],l),E=new f("perlinNoiseFragment");E.variables.addMultiple([{varname:"u_seed",datatype:"vec4",vartype:"uniform"},{varname:"u_resolution",datatype:"float",vartype:"uniform"}]),E.variables.apply(),E.addFunctions([i.randScalarFunction,i.randVectorFunction,i.mix5Function,i.perlinNoiseFunction]),v=i.grayscaleSnippet(),v.addSnippet("value",new h("sinenoise","perlin(gl_FragCoord.xy / u_resolution)")),v.setParameter("alpha","1.0");var F=new h("sineNoiseFragmentBody");F.source='gl_FragColor = ${S("grayscale", "null")};',F.addSnippet("grayscale",v),E.mainSnippet=F,x=new e(function(){return E.generate()}()),k=new d({vertexSource:m,fragmentSource:x,attributes:n,uniforms:o,buffers:p,textures:q,executor:r}),D.registerProgram("main",k),o.resolution.value=16,D.draw(),j="perlin-sine-gradient-noise";var G=$("#perlin-sine-gradient-noise"),H=new c(j,G[0],l),I=new f("perlinGradientNoiseFragment");I.variables.addMultiple([{varname:"u_seed",datatype:"vec4",vartype:"uniform"},{varname:"u_resolution",datatype:"float",vartype:"uniform"}]),I.variables.apply(),I.addFunctions([i.randScalarFunction,i.randGradFunction,i.mix5Function,i.perlinGradientNoiseFunction]),v=i.grayscaleSnippet(),v.addSnippet("value",new h("sinenoise","perlinGradient(gl_FragCoord.xy / u_resolution)")),v.setParameter("alpha","1.0");var J=new h("sineNoiseFragmentBody");J.source='gl_FragColor = ${S("grayscale", "null")};',J.addSnippet("grayscale",v),I.mainSnippet=J,x=new e(function(){return I.generate()}()),k=new d({vertexSource:m,fragmentSource:x,attributes:n,uniforms:o,buffers:p,textures:q,executor:r}),H.registerProgram("main",k),H.draw();j="simplex-sine-noise";var K=$("#simplex-sine-noise"),L=new c(j,K[0],l),M=new f("simplexNoiseFragment");M.variables.addMultiple([{varname:"u_seed",datatype:"vec4",vartype:"uniform"},{varname:"u_resolution",datatype:"float",vartype:"uniform"}]),M.variables.apply(),M.addFunctions([i.randScalarFunction,i.randVectorFunction,i.mix5Function,i.simplexNoiseFunction]),v=i.grayscaleSnippet(),v.addSnippet("value",new h("sinenoise","simplex(gl_FragCoord.xy / u_resolution)")),v.setParameter("alpha","1.0");var N=new h("sineNoiseFragmentBody");N.source='gl_FragColor = ${S("grayscale", "null")};',N.addSnippet("grayscale",v),M.mainSnippet=N,x=new e(function(){return M.generate()}()),k=new d({vertexSource:m,fragmentSource:x,attributes:n,uniforms:o,buffers:p,textures:q,executor:r}),L.registerProgram("main",k),o.resolution.value=16,L.draw(),j="simplex-sine-gradient-noise";var O=$("#simplex-sine-gradient-noise"),P=new c(j,O[0],l),Q=new f("simplexGradientNoiseFragment");Q.variables.addMultiple([{varname:"u_seed",datatype:"vec4",vartype:"uniform"},{varname:"u_resolution",datatype:"float",vartype:"uniform"}]),Q.variables.apply(),Q.addFunctions([i.randScalarFunction,i.randGradFunction,i.mix5Function,i.simplexGradientNoiseFunction]),v=i.grayscaleSnippet(),v.addSnippet("value",new h("sinenoise","simplexGradient(gl_FragCoord.xy / u_resolution)")),v.setParameter("alpha","1.0");var R=new h("sineNoiseFragmentBody");R.source='gl_FragColor = ${S("grayscale", "null")};',R.addSnippet("grayscale",v),Q.mainSnippet=R,x=new e(function(){return Q.generate()}()),k=new d({vertexSource:m,fragmentSource:x,attributes:n,uniforms:o,buffers:p,textures:q,executor:r}),P.registerProgram("main",k),P.draw(),j="wood";var S=$("#wood"),T=new c(j,S[0],l);x=new e(function(){return"precision mediump float;\nuniform vec4 u_seed;\nuniform float u_resolution;\nfloat rand(float f) {\n  return fract(sin(f + u_seed.z) * u_seed.w);\n}\nfloat rand(vec2 v) {\n  return rand(dot(v, u_seed.xy));\n}\nvec2 randGrad(vec2 v) {\n  float a = 2.0 * 3.14159265358 * rand(dot(v, u_seed.xy));\n  return vec2(cos(a), sin(a));\n}\nfloat noise(vec2 op) {\n  mat2 t = mat2(1.0, 0.0, 0.5, sqrt(3.0 / 4.0));\n  mat2 it = mat2(1.0, 0.0, -sqrt(1.0 / 3.0), 2.0 * sqrt(1.0 / 3.0));\n  vec2 ip = it * op;\n  vec2 il = floor(ip);\n  vec2 f = fract(ip);\n  vec2 ol = t * il;\n  vec2 oc, oc1, oc2, oc3;\n  oc = ol + vec2(0.75, sqrt(3.0) / 4.0);\n  oc2 = ol + vec2(1.0, 0.0);\n  oc3 = ol + vec2(0.5, sqrt(3.0 / 4.0));\n  //float y23 = -sqrt(3.0 / 4.0), x32 = -0.5, x13, y13;\n  float y23 = oc2.y - oc3.y, x32 = oc3.x - oc2.x, x13, y13;\n  float x03 = op.x - oc3.x, y03 = op.y - oc3.y;\n  if(f.x + f.y < 1.0) {\n    oc1 = ol;\n    x13 = -0.5;\n    y13 = -sqrt(3.0 / 4.0);\n  }\n  else {\n    oc1 = ol + vec2(1.5, sqrt(3.0 / 4.0));\n    x13 = 1.0;\n    y13 = 0.0;\n  }\n  x13 = oc1.x - oc3.x;\n  y13 = oc1.y - oc3.y;\n  vec3 r = vec3(dot(randGrad(oc1), op - oc1), dot(randGrad(oc2), op - oc2), dot(randGrad(oc3), op - oc3));\n  //r = vec3(0.0, 0.0, 1.0);\n  //vec3 d = vec3(length(op - oc1), length(op - oc2), length(op - oc3));\n  //vec3 w = 1.0 / d;\n  vec3 w = vec3((y23 * x03 + x32 * y03) / (y23 * x13 + x32 * y13), (-y13 * x03 + x13 * y03) / (y23 * x13 + x32 * y13), 0.0);\n  w.z = 1.0 - w.x - w.y;\n  vec3 w3 = w * w * (3.0 - 2.0 * w);\n  vec3 w5 = w * w * w * (6.0 * w * w - 15.0 * w + 10.0);\n  vec3 rv = r * w5;\n  return (rv.x + rv.y + rv.z) / (w5.x + w5.y + w5.z);\n}\nmat2 rot2(float a) {\n  return mat2(cos(a), sin(a), -sin(a), cos(a));\n}\nfloat lines(vec2 p, float f, float o, float a, float s, vec2 l) {\n  return smoothstep(l.x, l.y, a * sin(f * p.x + o) + s);\n}\nvoid main() {\n  vec2 p = gl_FragCoord.xy / u_resolution + vec2(256.0, 0.0);\n  vec2 wp = p.yx * vec2(2.0, 1.0);\n  float n = noise(p * vec2(0.25, pow(2.0, -6.0)));\n  mat2 r = rot2((n + 1.0) * 0.01);\n  gl_FragColor = vec4(vec3(lines(vec2(0.0, 0.0), 3.14 / 2.0, 0.2 + n * 64.0, 0.5, 0.5, vec2(0.0, 0.9))), 1.0);\n}"}()),k=new d({vertexSource:m,fragmentSource:x,attributes:n,uniforms:o,buffers:p,textures:q,executor:r}),T.registerProgram("main",k),T.draw(),j="splatter";var U=$("#splatter"),V=new c(j,U[0],l);x=new e(function(){return"precision mediump float;\nuniform vec4 u_seed;\nuniform float u_resolution;\nfloat rand(float f) {\n  return fract(sin(f + u_seed.z) * u_seed.w);\n}\nfloat rand(vec2 v) {\n  return rand(dot(v, u_seed.xy));\n}\nvec2 randGrad(vec2 v) {\n  float a = 2.0 * 3.14159265358 * rand(dot(v, u_seed.xy));\n  return vec2(cos(a), sin(a));\n}\nfloat noise(vec2 op) {\n  mat2 t = mat2(1.0, 0.0, 0.5, sqrt(3.0 / 4.0));\n  mat2 it = mat2(1.0, 0.0, -sqrt(1.0 / 3.0), 2.0 * sqrt(1.0 / 3.0));\n  vec2 ip = it * op;\n  vec2 il = floor(ip);\n  vec2 f = fract(ip);\n  vec2 ol = t * il;\n  vec2 oc, oc1, oc2, oc3;\n  oc = ol + vec2(0.75, sqrt(3.0) / 4.0);\n  oc2 = ol + vec2(1.0, 0.0);\n  oc3 = ol + vec2(0.5, sqrt(3.0 / 4.0));\n  //float y23 = -sqrt(3.0 / 4.0), x32 = -0.5, x13, y13;\n  float y23 = oc2.y - oc3.y, x32 = oc3.x - oc2.x, x13, y13;\n  float x03 = op.x - oc3.x, y03 = op.y - oc3.y;\n  if(f.x + f.y < 1.0) {\n    oc1 = ol;\n    x13 = -0.5;\n    y13 = -sqrt(3.0 / 4.0);\n  }\n  else {\n    oc1 = ol + vec2(1.5, sqrt(3.0 / 4.0));\n    x13 = 1.0;\n    y13 = 0.0;\n  }\n  x13 = oc1.x - oc3.x;\n  y13 = oc1.y - oc3.y;\n  vec3 r = vec3(dot(randGrad(oc1), op - oc1), dot(randGrad(oc2), op - oc2), dot(randGrad(oc3), op - oc3));\n  //r = vec3(0.0, 0.0, 1.0);\n  //vec3 d = vec3(length(op - oc1), length(op - oc2), length(op - oc3));\n  //vec3 w = 1.0 / d;\n  vec3 w = vec3((y23 * x03 + x32 * y03) / (y23 * x13 + x32 * y13), (-y13 * x03 + x13 * y03) / (y23 * x13 + x32 * y13), 0.0);\n  w.z = 1.0 - w.x - w.y;\n  vec3 w3 = w * w * (3.0 - 2.0 * w);\n  vec3 w5 = w * w * w * (6.0 * w * w - 15.0 * w + 10.0);\n  vec3 rv = r * w5;\n  return (rv.x + rv.y + rv.z) / (w5.x + w5.y + w5.z);\n}\nvoid main() {\n  vec2 p = gl_FragCoord.xy / u_resolution;\n  float s1 = noise(p / 4.0) * 0.5 + 0.5;\n  //vec2 sp = p + s1;\n  float s2 = (1.0 - s1) * 0.7 + (noise(p) * 0.5 + 0.5) * 0.3;\n  float g1 = smoothstep(0.18, 0.2, s1 * s1);\n  float g2 = smoothstep(0.14, 0.16, s2 * s2);\n  float g3 = smoothstep(0.18, 0.25, s2 * s2);\n  float g4 = 1.0 + g3 - g2;\n  gl_FragColor = vec4(vec3(s1 * s1), 1.0);\n  gl_FragColor = vec4(vec3(s2 * s2), 1.0);\n  gl_FragColor = vec4(vec3(g2 * g2), 1.0);\n  gl_FragColor = vec4(vec3(g3 * g3), 1.0);\n  gl_FragColor = vec4(g1 * vec3(g4 * g4), 1.0);\n}"}()),k=new d({vertexSource:m,fragmentSource:x,attributes:n,uniforms:o,buffers:p,textures:q,executor:r}),V.registerProgram("main",k),o.resolution.value=32,V.draw(),j="fractal-simplex-sine-gradient-noise";var W=$("#fractal-simplex-sine-gradient-noise"),X=new c(j,W[0],l),Y=new f("fractalSimplexGradientNoiseFragment");Y.variables.addMultiple([{varname:"u_seed",datatype:"vec4",vartype:"uniform"},{varname:"u_resolution",datatype:"float",vartype:"uniform"}]),Y.variables.apply(),Y.addFunctions([i.randScalarSeededFunction,i.randGradSeededFunction,i.mix3Function,i.mix5Function,i.simplexGradientNoiseSeededFunction]),v=i.grayscaleSnippet(),v.addSnippet("value",new h("sinenoise","value")),v.setParameter("alpha","1.0");var Z=new h("sineNoiseFragmentBody");Z.source='float value = mix3(-0.5, 1.5, simplexGradient(gl_FragCoord.xy / 512.0, u_seed)) - 0.5;\nvalue += (mix3(-0.5, 1.5, simplexGradient(gl_FragCoord.xy / 256.0, u_seed + vec4(vec2(0.0), 1294.62285, 3843.97555))) - 0.5) / 2.0;\nvalue += (mix3(-0.5, 1.5, simplexGradient(gl_FragCoord.xy / 128.0, u_seed + vec4(vec2(0.0), 8015.69457, 4157.59618))) - 0.5) / 4.0;\nvalue += (mix3(-0.5, 1.5, simplexGradient(gl_FragCoord.xy / 64.0, u_seed + vec4(vec2(0.0), 1055.22700, 8985.03880))) - 0.5) / 8.0;\nvalue += (mix3(-0.5, 1.5, simplexGradient(gl_FragCoord.xy / 32.0, u_seed + vec4(vec2(0.0), 3321.91072, 3115.67531))) - 0.5) / 16.0;\nvalue += (mix3(-0.5, 1.5, simplexGradient(gl_FragCoord.xy / 16.0, u_seed + vec4(vec2(0.0), 9392.20107, 8588.83631))) - 0.5) / 32.0;\nvalue += (mix3(-0.5, 1.5, simplexGradient(gl_FragCoord.xy / 8.0, u_seed + vec4(vec2(0.0), 6230.83333, 2164.97665))) - 0.5) / 64.0;\nvalue += (mix3(-0.5, 1.5, simplexGradient(gl_FragCoord.xy / 4.0, u_seed + vec4(vec2(0.0), 8503.51831, 3157.07155))) - 0.5) / 128.0;\nvalue += (mix3(-0.5, 1.5, simplexGradient(gl_FragCoord.xy / 2.0, u_seed + vec4(vec2(0.0), 1354.34785, 3309.93363))) - 0.5) / 256.0;\nvalue += (mix3(-0.5, 1.5, simplexGradient(gl_FragCoord.xy, u_seed + vec4(vec2(0.0), 2464.58509, 2852.88723))) - 0.5) / 512.0;\nvalue += 0.5;\ngl_FragColor = ${S("grayscale", "null")};',Z.addSnippet("grayscale",v),Y.mainSnippet=Z,x=new e(function(){return Y.generate()}()),k=new d({vertexSource:m,fragmentSource:x,attributes:n,uniforms:o,buffers:p,textures:q,executor:r}),X.registerProgram("main",k),o.resolution.value=512,X.draw()}]);