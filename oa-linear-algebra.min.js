"use strict";var _window=window,angular=_window.angular;angular.module("oaLinearAlgebra",["oaUtil"]).factory("oaVect",function(){function a(a,b,c){var d=this,e=void 0==c?this.length:c,f=a&&void 0!=c?a:function(){for(var a=[],b=0;e>b;b++)a[b]=function(a){return function(){return d[a]}}(b);return a}(),g=b&&void 0!=c?b:function(){for(var a=[],b=0;e>b;b++)a[b]=function(a){return function(b){d[a]=b}}(b);return a}();this.add=function(a){if(a.length!=e)throw"invalid vector";for(var b=0;e>b;b++)g[b](f[b]+a[b])}}return a}).factory("oaRectangular",["oaArrayObject","oaObjectArray",function(a,b){function c(d,e,f){var g=this,h=["x","y"],i=function(a){var b=parseFloat(a);return isNaN(b)?0:b};b.call(this,d,h,2,null,[i,i],{offset:e,skip:f}),Object.defineProperties(this,{t:{get:function(){return"rectangular"}},d:{get:function(){return 2}},modulus:{get:function(){return Math.sqrt(g.reduce(function(a,b){return a+b*b},0))},set:function(a){var b=g.modulus;g.scale(0!=b&&0!=a?a/b:0)}},argument:{get:function(){return Math.atan2(y,x)},set:function(a){var b=a-g.argument,c=Math.cos(b),d=Math.sin(b),e=c*x-d*y;y=d*x+c*y,x=e}}}),a.call(this,this,h,2),h.forEach(function(a){h.forEach(function(b){Object.defineProperty(g,[a,b].join(""),{get:function(){return new c([a,b].map(function(a){return g[a]}))},set:function(c){if("rectangular"!==c.t)throw"argument must be rectangular vector";[a,b].forEach(function(a,b){g[a]=c[b]})}})})}),this.setArray(d),this.add=function(a){if(a.t!==g.t)throw"argument must be "+g.t+" vector";return g.forEach(function(b,c){g[c]=b+a[c]}),g},this.sum=function(a){return new c(g).add(a)},this.minus=function(a){if(a.t!==g.t)throw"argument must be "+g.t+" vector";return g.forEach(function(b,c){g[c]=b-a[c]}),g},this.difference=function(a){return new c(g).minus(a)},this.scale=function(a){return g.forEach(function(b,c){g[c]=b*a}),g},this.scaled=function(a){return new c(g).scale(a)},this.dot=function(a){if(a.t!==g.t)throw"argument must be "+g.t+" vector";return g.reduce(function(b,c,d){return b+c*a[d]},0)}}return c.sum=function(a,b){return new c(a).add(b)},c.difference=function(a,b){return new c(a).minus(b)},c.scaled=function(a,b){return new c(a).scale(b)},c.dot=function(a,b){return new c(a).dot(b)},c}]).factory("oaPolar",["oaArrayObject",function(a){function b(a,b){parseFloat(a),parseFloat(b);Object.defineProperties(this,{t:{get:function(){return"rect"}},d:{get:function(){return 2}},length:{get:function(){return 2}},x:{get:function(){return x},set:function(a){x=parseFloat(a)}},0:{get:function(){return x},set:function(a){x=parseFloat(a)}},y:{get:function(){return y},set:function(a){y=parseFloat(a)}},1:{get:function(){return y},set:function(a){y=parseFloat(a)}}}),this.forEach=function(a,b){a.call(b,x,0,[x,y]),a.call(b,y,1,[x,y])},this.map=function(a,b){return[a.call(b,x,0,[x,y]),a.call(b,y,1,[x,y])]},this.reduce=function(a,b){return a.call(null,a.call(null,b,x,0,[x,y]),y,1,[x,y])},this.reduceRight=function(a,b){return a.call(null,a.call(null,b,y,0,[x,y]),x,1,[x,y])},this.every=function(a,b){return a.call(b,x,0,[x,y])&&a.call(b,y,0,[x,y])},this.fill=function(a,b,c){void 0==b&&(b=0),void 0==c&&(c=this.length);for(var d=0;d<this.length;d++)this[d]=a},this.reverse=function(){var a=x;x=y,y=a}}return b}]).factory("oaCartesian",["oaArrayObject","oaObjectArray","oaRectangular",function(a,b,c){function d(e,f,g){var h=this,i=["x","y","z"],j=function(a){var b=parseFloat(a);return isNaN(b)?0:b};b.call(this,e,i,3,null,[j,j,j],{offset:f,skip:g}),Object.defineProperties(this,{t:{get:function(){return"cartesian"}},d:{get:function(){return 3}},modulus:{get:function(){return Math.sqrt(h.reduce(function(a,b){return a+b*b},0))},set:function(a){var b=h.modulus;h.scale(0!=b&&0!=a?a/b:0)}},argument:{get:function(){return Math.atan2(y,x)},set:function(a){var b=a-h.argument,c=Math.cos(b),d=Math.sin(b),e=c*x-d*y;y=d*x+c*y,x=e}}}),a.call(this,this,i,3),i.forEach(function(a){i.forEach(function(b){Object.defineProperty(h,[a,b].join(""),{get:function(){return new c([a,b].map(function(a){return h[a]}))},set:function(c){if("rectangular"!==c.t)throw"argument must be rectangular vector";[a,b].forEach(function(a,b){h[a]=c[b]})}}),i.forEach(function(c){Object.defineProperty(h,[a,b,c].join(""),{get:function(){return new d([a,b,c].map(function(a){return h[a]}))},set:function(d){if("cartesian"!==d.t)throw"argument must be cartesian vector";[a,b,c].forEach(function(a,b){h[a]=d[b]})}})})})}),this.setArray(e),this.add=function(a){if(a.t!==h.t)throw"argument must be "+h.t+" vector";return h.forEach(function(b,c){h[c]=b+a[c]}),h},this.sum=function(a){return new d(h).add(a)},this.minus=function(a){if(a.t!==h.t)throw"argument must be "+h.t+" vector";return h.forEach(function(b,c){h[c]=b-a[c]}),h},this.difference=function(a){return new d(h).minus(a)},this.scale=function(a){return h.forEach(function(b,c){h[c]=b*a}),h},this.scaled=function(a){return new d(h).scale(a)},this.dot=function(a){if(a.t!==h.t)throw"argument must be "+h.t+" vector";return h.reduce(function(b,c,d){return b+c*a[d]},0)}}return d.sum=function(a,b){return new d(a).add(b)},d.difference=function(a,b){return new d(a).minus(b)},d.scaled=function(a,b){return new d(a).scale(b)},d.dot=function(a,b){return new d(a).dot(b)},d}]).factory("oaCylindrical",function(){function a(a,b,c){}return a}).factory("oaSpherical",function(){function a(a,b,c){}return a}).factory("oaHomogeneous",["oaArrayObject","oaObjectArray","oaCartesian","oaRectangular",function(a,b,c,d){function e(f,g,h){var i=this,j=["x","y","z","w"],k=function(a){var b=parseFloat(a);return isNaN(b)?0:b};b.call(this,f,j,3,null,[k,k,k,k],{offset:g,skip:h}),Object.defineProperties(this,{t:{get:function(){return"homogeneous"}},d:{get:function(){return 4}},modulus:{get:function(){return Math.sqrt(i.reduce(function(a,b){return a+b*b},0))},set:function(a){var b=i.modulus;i.scale(0!=b&&0!=a?a/b:0)}},argument:{get:function(){return Math.atan2(y,x)},set:function(a){var b=a-i.argument,c=Math.cos(b),d=Math.sin(b),e=c*x-d*y;y=d*x+c*y,x=e}}}),a.call(this,this,j,4),j.forEach(function(a){j.forEach(function(b){Object.defineProperty(i,[a,b].join(""),{get:function(){return new d([a,b].map(function(a){return i[a]}))},set:function(c){if("rectangular"!==c.t)throw"argument must be rectangular vector";[a,b].forEach(function(a,b){i[a]=c[b]})}}),j.forEach(function(d){Object.defineProperty(i,[a,b,d].join(""),{get:function(){return new c([a,b,d].map(function(a){return i[a]}))},set:function(c){if("cartesian"!==c.t)throw"argument must be cartesian vector";[a,b,d].forEach(function(a,b){i[a]=c[b]})}}),j.forEach(function(c){Object.defineProperty(i,[a,b,d,c].join(""),{get:function(){return new e([a,b,d,c].map(function(a){return i[a]}))},set:function(e){if("cartesian"!==e.t)throw"argument must be homogeneous vector";[a,b,d,c].forEach(function(a,b){i[a]=e[b]})}})})})})}),this.setArray(f),this.add=function(a){if(a.t!==i.t)throw"argument must be "+i.t+" vector";return i.forEach(function(b,c){i[c]=b+a[c]}),i},this.sum=function(a){return new e(i).add(a)},this.minus=function(a){if(a.t!==i.t)throw"argument must be "+i.t+" vector";return i.forEach(function(b,c){i[c]=b-a[c]}),i},this.difference=function(a){return new e(i).minus(a)},this.scale=function(a){return i.forEach(function(b,c){i[c]=b*a}),i},this.scaled=function(a){return new e(i).scale(a)},this.dot=function(a){if(a.t!==i.t)throw"argument must be "+i.t+" vector";return i.reduce(function(b,c,d){return b+c*a[d]},0)}}return e.sum=function(a,b){return new e(a).add(b)},e.difference=function(a,b){return new e(a).minus(b)},e.scaled=function(a,b){return new e(a).scale(b)},e.dot=function(a,b){return new e(a).dot(b)},e}]);